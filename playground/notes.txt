Im building a new library called playcraft. Its a tool which help developers and testers to create playwright tests faster. 

Functionalilites:
Its a webapp, where user are provided with a terminal view where playwright code can be written and executed and a browser view as an iframe which shows the live execution of the application.

Architecture:
 Backend: 
1. Express server for api's
2. SocketIO server for events

FrontEnd:
react+tailwind

The tool will be shipped as a node module named playcraft and can be installed via npm. User can start the tool by enterning playcraft from the terminal.

It should open a new chromium browser and loads the front-end app(served from the root path of the express server)

For the time, when the users didn't ptovide any url to open, the UI should show a browser like UI with a address bar and body with a message "Enter the URL of your application to navigate".

When user clicks submit, FE will send a message to BE with a message to open a URL. The backend should find the root domain name and use page.goto to laod the root URL. Also with the page interception, it should check if the doamin is same as the page.goto and first time loading, then it should mock the response with the front end webapp index.html.